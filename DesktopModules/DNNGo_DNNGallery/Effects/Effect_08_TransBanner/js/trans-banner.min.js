/* Translucent - Responsive Banner Rotator / Slider | v1.4.2 | Updated:17 SEP 2012 | (c) 2011-12 Ramesh Kumar | http://codecanyon.net/user/VF */

(function (e, f, h) {
    var d = { slide_autoplay: true, slide_delaytime: 5, slide_transition: 1, slide_transition_period: 800, slide_preload_images: 1, slide_random_order: false, image_align_center: true, image_resize: true, image_resize_to_fit: false, navigation_type: 1, button_size: 20, button_size_touch_device: 28, button_margin: 4, button_opacity: 0.7, button_space: 2, button_color: "#FFFFFF", button_show_next: true, button_show_back: false, button_show_timer: true, button_show_numbers: true, button_numbers_autohide: true, button_numbers_horizontal: false, dot_button_size: 14, dot_button_space: 10, dot_button_margin: 10, dot_button_dark: false, dot_button_bg_blur: true, dot_button_bg_padding: 8, caption_float_mode: false, caption_bg_blur: 12, caption_padding_x: 24, caption_padding_y: 12, caption_margin_x: 0, caption_margin_y: 0, caption_position_x: 50, caption_position_y: 100, caption_width: 300, caption_height: "", caption_bg_color: "#FFFFFF", caption_bg_opacity: 0.08, caption_bg_radius: 6, caption_bg_shadow: 0.3, caption_border: 1, caption_border_color: "#FFFFFF", caption_border_opacity: 0.15, caption_allow_selection: false, mouse_drag: true, touch_swipe: true, touch_dragdrop_factor: 60, touch_throw_factor: 5, responsive: true, responsive_limit_autoplay: "", responsive_limit_caption: 480, responsive_limit_navigation: 480, responsive_limit_navigation_type: 2, responsive_screen_based_limits: false }; function i(k, t, q) { var p = this; var r = this.sett = e.extend({}, d, t); this.instanceID = q; this.$cont = k; this.$children = this.$cont.find(".Slide"); if (r.slide_random_order) { this.shuffle(this.$children) } this.maxW = this.$cont.css("max-width"); if (this.maxW.indexOf("%") < 0) { this.maxW = parseInt(this.maxW) } else { this.maxW = false } this.bW = this.$cont.width(); this.oH = parseInt(this.$cont.css("height")); this.ratio = (this.maxW || this.bW) / this.oH; this.bH = this.getHeight(); this.FF2 = e.browser.mozilla && parseFloat(e.browser.version, 10) < 1.9 ? true : false; this.IE8 = e.browser.msie && parseInt(e.browser.version, 10) <= 8 ? true : false; this.canvasSupport = !!h.createElement("canvas").getContext; this.touchDevice = "ontouchstart" in f; this.slides = []; this.slide_tot = this.$children.length; this.slide_dir = -1; this.slide_sel = 0; this.slide_pr1 = ""; this.slide_pr2 = ""; this.slide_fin = false; this.slide_drg = false; this.slide_sta = true; this.clockDraw; this.clockContext; this.clockStart; this.clockDiff = 0; this.clockTimer = r.button_show_timer; this.clockPlaying = false; this.buttonNext = r.button_show_next; this.buttonBack = r.button_show_back; this.buttonNumber = r.button_show_numbers; this.buttonIE = this.IE8 ? 1 : 0; this.buttonLeaveTimer; this.navHolder; this.draggable = ((this.touchDevice && r.touch_swipe) || (!this.touchDevice && r.mouse_drag)) ? true : false; this.dragged = false; this.numShow = false; this.moved = 0; this.timerob = e('<div style="position: absolute;"></div>'); this.regxHost = new RegExp("^(?:f|ht)tp(?:s)?://([^/]+)", "im"); if (this.touchDevice) { this.downEvent = "touchstart"; this.upEvent = "touchend"; this.moveEvent = "touchmove" } else { this.downEvent = "mousedown"; this.upEvent = "mouseup"; this.moveEvent = "mousemove" } this.dotButtonBlurBG = false; var n = ["move", "fade", "slideIn", "slideOut"]; if (r.slide_transition < 1 || isNaN(r.slide_transition)) { r.slide_transition = 1 } else { if (r.slide_transition > n.length) { r.slide_transition = n.length } } r.slide_transition = n[r.slide_transition - 1]; if (r.caption_margin_y == 0 && !r.caption_float_mode) { r.caption_bg_radius = 0 } if (r.button_show_numbers && !r.button_show_next) { r.button_numbers_autohide = false } if (r.navigation_type < 1) { r.navigation_type = 1 } else { if (r.navigation_type > 3) { r.navigation_type = 3 } } if (r.responsive_limit_navigation_type < 1) { r.responsive_limit_navigation_type = 1 } else { if (r.responsive_limit_navigation_type > 3) { r.responsive_limit_navigation_type = 3 } } if (r.responsive_limit_navigation_type == "" || (r.navigation_type > 1 && r.responsive_limit_navigation_type === 1)) { r.responsive_limit_navigation_type = r.navigation_type } if (this.touchDevice) { r.button_size = Math.max(r.button_size, r.button_size_touch_device) } this.icSize = 60; this.icOff = r.button_size > 26 ? this.icSize * 4 : 0; if (r.dot_button_dark) { this.icDotOff = -this.icSize * (11 + 0.5) + ((r.dot_button_size + r.dot_button_space) / 2) } else { this.icDotOff = -this.icSize * (8 + 0.5) + ((r.dot_button_size + r.dot_button_space) / 2) } if (e.browser.webkit) { this.shProp = "-webkit-box-shadow" } else { if (e.browser.mozilla && this.$cont.css("box-shadow") != "none") { this.shProp = "-moz-box-shadow" } else { this.shProp = "box-shadow" } } this.blurIteration = this.touchDevice ? 1 : 2; this.enableCaption = (r.responsive && this.checkLimit(r.responsive_limit_caption, false)) ? false : true; this.currentNav = (r.responsive && this.checkLimit(r.responsive_limit_navigation, false)) ? r.responsive_limit_navigation_type : r.navigation_type; this.autoPlaying = (r.responsive && this.checkLimit(r.responsive_limit_autoplay, false)) ? false : r.slide_autoplay; var l = /url\(["']?([^'")]+)['"]?\)/; var o = e('<div class="icon"></div>').appendTo(this.$cont); this.icons = e(".icon").css("background-image").replace(l, "$1"); this.imgList = [{ src: this.icons, loaded: false }, { src: this.$children.eq(0).find("img").attr("src"), loaded: false}]; for (var m = 1; m < Math.min(r.slide_preload_images, this.slide_tot); m++) { this.imgList.push({ src: this.$children.eq(m).find("img").attr("src"), loaded: false }) } this.timer_sprite = this.canvasSupport || o.addClass("timer_sprite").css("background-image").replace(l, "$1"); o.remove(); e.each(this.imgList, function (u) { var s = new Image(); e(s).bind("load", { id: u, self: p }, p.loadComplete).bind("error", { id: u, self: p }, p.loadComplete); s.src = p.imgList[u].src }) } i.prototype = { loadComplete: function (n) { var l = n.data.self, k = true; l.imgList[n.data.id].loaded = true; for (var m = 0; m < l.imgList.length; m++) { if (!l.imgList[m].loaded) { k = false } } if (k) { l.init() } }, init: function () { var y = this, v = y.sett, o = "0px 0px 6px " + (e.browser.webkit && parseInt(e.browser.version, 10) < 533 ? "" : "0px ") + "rgba(0, 0, 0, ", D = y.$children.find("div")[0], m, x, E, w, t, p, n, k, u, z, B, A; y.blurIE = Math.max((v.caption_bg_blur / 3), 3); var q = 0; if (v.button_show_next) { q++ } if (v.button_show_back) { q++ } if (v.button_show_timer) { q++ } if (v.button_numbers_horizontal && !v.button_numbers_autohide) { q += y.slide_tot } y.navWidth = q * (v.button_size + v.button_space); for (var C = 0; C < y.slide_tot; C++) { x = y.$children.eq(C).css({ "z-index": y.slide_tot - C, visibility: "visible" }); E = x.find("img").attr("galleryimg", "no").addClass("noSelect"); if (!D && v.navigation_type == 2 && v.dot_button_bg_blur && v.dot_button_margin > -1) { y.dotButtonBlurBG = true; y.sett.caption_float_mode = true; y.updateFloatSettings(); w = e("<div>"); x.append(w) } else { w = x.find("div") } y.slides.push({ src: E.attr("src"), scale: 1, ox: "", oy: "", con: x, img: E, txt: w[0] ? w : false, loaded: false, butt: "", z: y.slide_tot - C, delay: (x.data("delay") || v.slide_delaytime) * 1000, pd: x.data("position"), wd: x.data("width"), hd: x.data("height") }); if (w[0]) { w.css({ left: v.caption_padding_x, top: v.caption_padding_y, display: "none" }).wrapInner(e("<span></span>").css("opacity", 0.99)); if (v.caption_allow_selection) { w.bind("mousedown", function (s) { s.stopImmediatePropagation() }) } else { w.addClass("noSelect").attr("unselectable", "on") } t = e('<div style="z-index: 3; position: absolute; bottom: ' + v.caption_margin_y + "px; " + (y.dotButtonBlurBG ? "" : "display: none") + ';">									<div class="txtCont"></div>								</div>'); e.extend(y.slides[C], { cap: t, txtCont: t.find(".txtCont") }); n = x.data("caption_bg_shadow") || v.caption_bg_shadow; k = "-moz-border-radius: " + v.caption_bg_radius + "px; -webkit-border-radius: " + v.caption_bg_radius + "px; border-radius: " + v.caption_bg_radius + "px; -khtml-border-radius: " + v.caption_bg_radius + "px;"; if (v.caption_bg_blur > 0) { if (y.IE8) { m = e('<div class="captionCanvas" style="z-index:1; overflow:hidden;">											<div style="position:absolute; z-index:2; top:' + (-(v.caption_bg_blur) * 2) + "px; left:" + (-(v.caption_bg_blur * 2)) + "px; -ms-filter: progid:DXImageTransform.Microsoft.blur(pixelradius=" + v.caption_bg_blur + "); filter: progid:DXImageTransform.Microsoft.blur(pixelradius=" + v.caption_bg_blur + ');">												<img src="' + E.attr("src") + '" style="position:absolute;" />											</div>										</div>'); if (v.caption_margin_y <= v.caption_bg_blur / 2 && !v.caption_float_mode) { m.append('<div class=".TBinner" style="z-index:1; position:absolute; top:' + (-(y.blurIE) * 2) + "px; left:" + (-(y.blurIE * 2)) + "px; -ms-filter: progid:DXImageTransform.Microsoft.blur(pixelradius=" + y.blurIE + "); filter: progid:DXImageTransform.Microsoft.blur(pixelradius=" + y.blurIE + ');">													<img src="' + E.attr("src") + '" style="position:absolute;" />												</div>') } } else { if (!y.FF2) { m = e('<canvas class="captionCanvas" style="' + k + '"></canvas>') } } } else { if (n > 0 && !y.FF2) { m = e('<div class="captionCanvas" style="' + k + '"></div>') } } u = x.data("caption_bg_color") || v.caption_bg_color; z = x.data("caption_bg_opacity") || v.caption_bg_opacity; B = e('<div class="captionCanvas" style="z-index:2; background-color:' + u + ";" + k + '"></div>').css("opacity", z); if (v.caption_border) { A = e('<div class="captionCanvas" style="z-index:3; border:' + v.caption_border + "px solid " + v.caption_border_color + ";" + k + '"></div>').css("opacity", v.caption_border_opacity) } if (n > 0 && !y.FF2) { m.css(y.shProp, (o + n + ")")) } t.append(m).append(B).append(A); y.slides[C].txtCont.append(w); x.append(t); y.slides[C].bord = A; y.slides[C].col = B; y.slides[C].can = m } x.hide().bind(y.downEvent, { id: C, self: y }, y.startDrag) } y.imageLoad(0); for (var C = 1; C < y.slide_tot; C++) { var l = new Image(); y.slides[C].img.hide(); e(l).bind("load", { id: C, self: y }, y.imageLoad); l.src = y.slides[C].src } if (y.draggable) { var r = y.$cont.find("a"); r.each(function () { var s = e(this); s.bind("click", { l: s.attr("href"), t: s.attr("target") }, function (F) { F.stopImmediatePropagation(); F.preventDefault(); if (!y.slide_drg) { e(h).unbind(".TransBannerDrag_" + y.instanceID); f.open(F.data.l, F.data.t ? F.data.t.toLowerCase() : "_self") } else { y.slide_drg = false } return false }); if (s.find("img").length < 1) { s.bind("mousedown", function (F) { F.preventDefault(); return false }) } }) } if (v.responsive) { e(f).bind("resize", function (s) { y.blurIteration = 1; y.resizeBanner({ internal: true }) }) } }, imageLoad: function (l) { var k, m; if (l.data) { k = l.data.self; m = l.data.id } else { k = this; m = l } k.slides[m].imgW = k.slides[m].img[0].width; k.slides[m].imgH = k.slides[m].img[0].height; k.resizeImage(m); if (k.slides[m].txt) { k.updateText(m) } if (!k.IE8 && !k.FF2 && k.sett.caption_bg_blur > 0 && k.slides[m].txt) { k.createBlur(m, true) } else { k.showSlide(m) } }, resizeImage: function (p) { var m = this, o = m.sett, k = m.slides, l, n; if (o.image_resize) { k[p].scale = m.bW / k[p].imgW; if ((k[p].scale * k[p].imgH <= m.bH && !o.image_resize_to_fit) || (k[p].scale * k[p].imgH >= m.bH && o.image_resize_to_fit)) { k[p].scale = m.bH / k[p].imgH; k[p].img.height(m.bH); k[p].img.width(k[p].imgW * k[p].scale); l = k[p].imgW * k[p].scale; n = m.bH } else { k[p].img.width(m.bW); k[p].img.height(k[p].imgH * k[p].scale); l = m.bW; n = k[p].imgH * k[p].scale } if (o.image_align_center) { m.alignCenter(p) } if (m.IE8) { e(k[p].can).find("img").each(function () { this.width = l; this.height = n }) } } else { if (o.image_align_center) { m.alignCenter(p) } } }, alignCenter: function (k) { this.slides[k].ox = (this.bW - (this.slides[k].imgW * this.slides[k].scale)) / 2; this.slides[k].oy = (this.bH - (this.slides[k].imgH * this.slides[k].scale)) / 2; this.slides[k].img.css({ left: this.slides[k].ox, top: this.slides[k].oy }) }, createBlur: function (o, l) { var m = this, k = m.slides[o], n = m.getHostName(k.src); if (n && n !== h.domain) { e.getImageData({ url: k.src, success: function (p) { g(p, k.cx, k.cy, k.cw, k.ch, k.scale, k.ox, k.oy, k.can[0], m.sett.caption_bg_blur, false, m.blurIteration); if (l) { m.showSlide(o) } }, error: function (q, p) { if (l) { m.showSlide(o) } } }) } else { g(k.img[0], k.cx, k.cy, k.cw, k.ch, k.scale, k.ox, k.oy, k.can[0], m.sett.caption_bg_blur, false, m.blurIteration); if (l) { m.showSlide(o) } } }, showSlide: function (k) { this.slides[k].con.css("background-image", "none"); this.slides[k].loaded = true; if (k == this.slide_sel) { this.slides[k].img.fadeIn(400) } else { this.slides[k].img.show() } if (k == 0) { this[this.sett.slide_transition](); if (this.sett.button_show_next || this.sett.button_show_back || this.sett.button_show_timer || this.sett.button_show_numbers) { this.setNavigation() } } }, getHostName: function (k) { var l = k.match(this.regxHost); if (l !== null) { return l[1].toString() } else { return false } }, updateFloatSettings: function () { this.sett.caption_position_x = ((this.bW - ((this.sett.dot_button_size + this.sett.dot_button_space) * this.slide_tot) + this.sett.dot_button_space) / 2) - this.sett.dot_button_bg_padding; this.sett.caption_position_y = this.bH - this.sett.dot_button_margin - (this.sett.dot_button_bg_padding * 2) - this.sett.dot_button_size; this.sett.caption_width = ((this.sett.dot_button_size + this.sett.dot_button_space) * this.slide_tot) - this.sett.dot_button_space + (this.sett.dot_button_bg_padding * 2); this.sett.caption_height = this.sett.dot_button_size + this.sett.dot_button_bg_padding * 2; this.sett.caption_bg_radius = this.sett.caption_height }, getHeight: function () { var l = this, k; if (!l.sett.responsive) { return l.$cont.height() } if (l.maxW) { if (l.bW < l.maxW) { k = l.bW / l.ratio } else { k = l.oH } l.$cont.height(k) } else { if (l.$cont.css("max-width").indexOf("%") < 0) { k = l.bW / l.ratio; l.$cont.height(k) } else { k = l.$cont.height() } } return Math.max(20, k) }, checkLimit: function (m, l) { var k; if (m) { k = (this.sett.responsive_screen_based_limits || l) ? Math.max(screen.width, screen.height) : this.bW; return (k <= parseInt(m) ? true : false) } else { return false } }, updateText: function (w) { var v = this, r = v.sett, C = v.slides, u = v.slides[w].con, E = v.slides[w].img, t = v.slides[w].txt, p = v.slides[w].cap, m = v.slides[w].txtCont, A = v.slides[w].bord, B = v.slides[w].col, k = v.slides[w].can, y, x, z, F, D = v.slides[w].pd, o = v.slides[w].wd, n = v.slides[w].hd, q; if (r.caption_float_mode) { if (v.dotButtonBlurBG) { v.updateFloatSettings() } if (D && !v.dotButtonBlurBG) { y = parseInt(D.split(",")[0], 10); x = parseInt(D.split(",")[1], 10) } else { y = r.caption_position_x; x = r.caption_position_y } if (o && !v.dotButtonBlurBG) { z = parseInt(o, 10) } else { z = r.caption_width } if (y == v.maxW - z) { y = v.bW - z } else { if (v.maxW && !v.dotButtonBlurBG) { y *= v.bW / v.maxW; x *= v.bW / v.maxW } } if (y + z + r.caption_margin_x > v.bW) { z = v.bW - y - r.caption_margin_x } t.width((z - (r.caption_padding_x * 2))); if (n && !v.dotButtonBlurBG) { F = parseInt(n, 10) } else { if (r.caption_height == "") { F = v.getHiddenTextHeight(u, p, t) + (r.caption_padding_y * 2) } else { F = r.caption_height } } if (x + F + r.caption_margin_y > v.bH) { F = v.bH - x - r.caption_margin_y } t.height(r.caption_height == "" ? "auto" : F); p.css({ left: y, top: x, width: z, height: F }) } else { p.css({ left: r.caption_padding_x, width: v.bW - ((r.caption_padding_x + r.caption_margin_x) * 2) - (v.currentNav > 1 ? 0 : v.navWidth) }); t.width(v.bW - ((r.caption_padding_x + r.caption_margin_x) * 2) - (v.currentNav > 1 ? 0 : v.navWidth)); q = Math.min(v.getHiddenTextHeight(u, p, t) + (r.caption_padding_y * 2), v.bH - (r.caption_margin_y * 2)); y = r.caption_margin_x; x = v.bH - q - r.caption_margin_y; z = v.bW - (r.caption_margin_x * 2); F = q; t.width(z - (v.currentNav > 1 ? 0 : v.navWidth) - (r.caption_padding_x * 2)); p.css({ left: y, width: z, height: F }) } m.css({ width: z, height: F }); var l = u.data("caption_bg_shadow") || r.caption_bg_shadow; e.extend(v.slides[w], { cx: y, cy: x, cw: z, ch: F, tx: r.caption_padding_x + y, ty: r.caption_padding_y + x, tw: t.width() }); if (r.caption_bg_blur > 0) { if (v.IE8) { k.css({ width: z - 1, height: F - 1 }); k.find("div").css({ width: z + (r.caption_bg_blur * 2), height: F + (r.caption_bg_blur * 2) }); e(C[w].can).find("img").each(function () { e(this).css({ left: C[w].ox - y + (r.caption_bg_blur), top: C[w].oy - x + (r.caption_bg_blur / 2) }) }); if (r.caption_margin_y <= r.caption_bg_blur / 2 && !r.caption_float_mode) { k.find(".TBinner").css({ width: z + (v.blurIE * 2), height: F + (v.blurIE * 2) }).find("img").css({ left: -y + (v.blurIE), top: -x + (v.blurIE) }) } } else { v.createBlur(w, false) } } else { if (l > 0 && !v.FF2) { k.css({ width: z, height: F }) } } B.css({ width: z, height: F }); if (r.caption_border) { A.css({ width: z - (r.caption_border * 2), height: F - (r.caption_border * 2) }) } }, getHiddenTextHeight: function (p, n, k) { var o = []; if (p.css("display") == "none") { o.push(p.css("display", "block")) } if (n.css("display") == "none") { o.push(n.css("display", "block")) } if (k.css("display") == "none") { o.push(k.css("display", "block")) } var l = k.height(); for (var m = 0; m < o.length; m++) { o[m].css("display", "none") } return l }, shuffle: function (k) { var m, n; for (var l = 0; l < k.length; l++) { m = Math.floor(Math.random() * k.length); n = k[l]; k[l] = k[m]; k[m] = n } }, startDrag: function (l) { var k = l.data.self, o = l.data.id, n = l.pageX || l.originalEvent.changedTouches[0].pageX, m = l.pageY || l.originalEvent.changedTouches[0].pageY; k.ch = 0, k.p = 0; if (k.currentNav < 3 && k.sett.button_numbers_autohide) { k.checkDropDown(false, false) } if (k.buttonNext[0]) { k.buttonNext.trigger("mouseout", { self: k, num: "next", butt: k.buttonNext }) } if (l.type == "mousedown") { l.preventDefault() } if (!k.draggable || k.slide_drg || !k.slide_fin) { return } if (k.sett.slide_transition !== "move") { k.slides[o].con.css(k.shProp, "0px 0px 45px 0px #000000") } k.slide_drg = false; e(h).unbind(".TransBannerDrag_" + k.instanceID).bind(k.moveEvent + ".TransBannerDrag_" + k.instanceID, { self: k, id: l.data.id, sx: n, sy: m }, k.onDragMove).bind(k.upEvent + ".TransBannerDrag_" + k.instanceID, { self: k, id: l.data.id, sx: n, sy: m }, k.onDragUp) }, dragTransComplete: function (k) { k.slide_fin = true; k.slide_drg = false; if (k.sett.button_show_numbers && this.currentNav < 3) { k.toggleButton(true) } else { k.timerReset(true) } if (k.slides[k.n].txt) { if (!k.dotButtonBlurBG) { k.slides[k.n].cap.hide() } if (k.sett.caption_float_mode) { k.slides[k.n].cap.css("left", (k.IE8 || k.dotButtonBlurBG) ? k.slides[k.n].cx : k.slides[k.n].cx + (100 * -k.slide_dir)) } } if (k.slides[k.n].txt && k.enableCaption) { k.animateCaption() } if (k.autoPlaying) { k.startDelayTimer() } }, onDragMove: function (n) { var k = n.data.self, m = k.sett, q = n.data.id, p = n.data.sx, o = n.data.sy, l; if (k.touchDevice) { l = n.originalEvent.changedTouches[0].pageX; if ((n.originalEvent.touches.length > 1 || Math.abs(l - p) < Math.abs(n.originalEvent.changedTouches[0].pageY - o) / 2) && !k.slide_drg) { k.slide_drg = false; e(h).unbind(".TransBannerDrag_" + k.instanceID); return } } else { l = n.pageX } k.ch = l - k.p; k.p = l; k.pos = l - p; if (k.pos > k.bW) { k.pos = k.bW } if (k.pos < -k.bW) { k.pos = -k.bW } if (!k.slide_drg) { k.dragFir = k.pos } else { if ((k.dragFir > 0 && k.pos < 0) || (k.dragFir < 0 && k.pos > 0)) { k.pos = k.dragFir = 0; k.slide_drg = false } } k.n = k.slide_sel + (k.pos > 0 ? -1 : 1); if (k.n < 0) { k.n = k.slide_tot - 1 } else { if (k.n > k.slide_tot - 1) { k.n = 0 } } if (k.slides[k.n].txt && !k.dotButtonBlurBG) { k.slides[k.n].cap.hide() } k.slide_pr1 = k.n; k.zSort(2, 1); if (k.clockPlaying) { k.clockPlaying = false; k.timerob.stop(); k.timerReset(true) } if (k.slide_drg && k.pos == 0) { k.slide_drg = false; k.slides[q].con.css("left", 0); k.slides[k.n].con.css("left", 0) } else { k.slide_drg = true; k.slides[q].con.css("left", k.pos); k.slides[k.n].con.css("left", (m.slide_transition == "move" ? k.pos + (k.pos > 0 ? -k.bW : k.bW) : 0)); k.slides[k.n].con.show() } n.preventDefault(); return false }, onDragUp: function (p) { var l = p.data.self, n = l.sett, r = p.data.id, q = p.data.sx, k = n.slide_transition == "move"; e(h).unbind(".TransBannerDrag_" + l.instanceID); if (l.slide_drg) { var m = 0; var o = l.slides[r].con.position().left; if (o > n.touch_dragdrop_factor) { m = 1 } else { if (o < -n.touch_dragdrop_factor) { m = -1 } } if (!l.IE8) { if (l.ch > n.touch_throw_factor) { m = o < 0 ? 0 : 1 } else { if (l.ch < -n.touch_throw_factor) { m = o > 0 ? 0 : -1 } } } if (m !== 0) { l.dragged = true; l.slide_dir = m; l.slide_fin = false; l.slide_sel = l.n } l.slides[r].con.stop().animate({ left: (l.bW + (k ? 0 : 30)) * m }, { duration: m == 0 ? 400 : Math.max((l.bW - (l.slides[r].con.position().left * m)) / (k ? 1.5 : 0.75), k ? 400 : 600), easing: (k || m == 0) ? "easeOutQuad" : "easeOutQuart", step: function (s) { if (k) { l.slides[l.n].con.css("left", s + (l.pos > 0 ? -l.bW : l.bW)) } }, complete: function () { if (!k) { l.slides[r].con.css(l.shProp, "none") } if (m == 0) { l.slide_drg = false; !l.autoPlaying || l.startDelayTimer() } else { l.dragTransComplete(l) } } }) } return false }, changeSlide: function (k) { this.slide_pr2 = this.slide_pr1; this.slide_pr1 = this.slide_sel; this.dragged = false; if (k == "next") { this.slide_sel = this.slide_sel + 1 > this.slide_tot - 1 ? 0 : this.slide_sel + 1 } else { if (k == "back") { this.slide_sel = this.slide_sel - 1 < 0 ? this.slide_tot - 1 : this.slide_sel - 1 } else { this.slide_sel = k } } this[this.sett.slide_transition]() }, zSort: function (m, l) { var n = 1; for (var k = 0; k < this.slide_tot; k++) { if (k !== this.slide_sel && k !== this.slide_pr1) { if (this.slides[k]) { this.slides[k].con.css("z-index", n); if (this.IE8) { this.slides[k].con.hide() } } n++ } } if (this.slides[this.slide_pr1]) { this.slides[this.slide_pr1].con.css("z-index", this.slide_tot + l) } if (this.slides[this.slide_sel]) { this.slides[this.slide_sel].con.css("z-index", this.slide_tot + m) } }, textOut: function () { var k = this; if (this.slides[this.slide_pr1] && this.sett.slide_transition == "fade") { this.slides[this.slide_pr1].txt.stop(true).animate({ left: -k.slides[k.slide_pr1].cw / 2 }, { duration: 150, easing: "easeOutQuad", queue: false, complete: function () { e(this).hide() } }) } }, textIn: function () { var k = this, l = -k.slide_dir, n = k.IE8 ? "filter" : "opacity", m = k.IE8 ? "none" : 1; if (k.sett.slide_transition == "fade" && !k.dragged) { l = 1 } if (k.slides[k.slide_sel].txt) { k.slides[k.slide_sel].txt.css({ left: k.sett.caption_padding_x + (100 * l), prop: m }).hide().fadeIn(600, function () { if (k.IE8) { e(this).removeAttr("filter").removeAttr("-ms-filter") } }).animate({ left: k.sett.caption_padding_x }, { duration: 800, easing: "easeOutQuart", queue: false }) } }, animateCaption: function () { var k = this, l = this.slide_sel; this.slides[this.slide_sel].txt.hide(); if (this.sett.caption_float_mode) { if (this.IE8 || this.dotButtonBlurBG) { if (!k.dotButtonBlurBG) { this.slides[l].cap.hide().fadeIn({ duration: 300 }) } } else { this.slides[l].cap.hide().fadeIn({ duration: 800, queue: false }).animate({ left: this.slides[l].cx }, { duration: 600 }) } this.textIn() } else { if (this.IE8) { this.slides[l].cap.hide().fadeIn({ duration: 600, complete: function () { k.textIn() }, queue: false }) } else { this.slides[l].cap.hide().fadeIn({ duration: 600, queue: false }).animate({ _: 100 }, { duration: 400, complete: function () { k.textIn() } }) } } }, setNavigation: function () { var k = this; for (var l = 1; l <= 3; l++) { if (((!k.sett.responsive || k.sett.responsive_limit_navigation == "" || !k.checkLimit(k.sett.responsive_limit_navigation, true)) && k.sett.navigation_type === l) || (k.sett.responsive && k.sett.responsive_limit_navigation !== "" && k.sett.responsive_limit_navigation_type === l)) { if (l == 1) { k.navHolder = k.navigation(); k.$cont.prepend(k.navHolder) } else { if (l == 2) { k.navHolderD = k.dotNavigation(); k.$cont.prepend(k.navHolderD) } else { if (l == 3) { k.navHolderA = k.arrowNavigation(); k.$cont.prepend(k.navHolderA) } } } } } k.swapNavigation(false); if (!k.sett.button_numbers_autohide && k.sett.button_show_numbers && k.navHolder) { for (var l = 0; l < k.slide_tot; l++) { k.showHideButton(l, true) } } }, arrowNavigation: function () { var k = this, n = k.sett, m = n.button_size, o = n.button_space, l = e('<div class="navHolder" style="z-index:' + (k.slide_tot + 70) + '; left: 0px; top: 0px;"></div>'); k.buttonNextA = k.addButton(k, l, 4, true, false, "next").css({ left: k.bW - m - n.button_margin, top: (k.bH - m) / 2 }); k.buttonBackA = k.addButton(k, l, 5, true, false, "back").css({ left: n.button_margin, top: (k.bH - m) / 2 }); return l }, dotNavigation: function () { var l = this, p = l.sett, o = p.dot_button_size + p.dot_button_space, q = 0, k = (((o + q) * l.slide_tot) - q) / 2, n = e('<div class="navHolder" style="z-index:' + (l.slide_tot + 60) + "; left: " + parseInt(l.bW / 2 / 1) + 'px; bottom: 0px;"></div>'); for (var m = 0; m < l.slide_tot; m++) { l.slides[m].buttS = l.addButton(l, n, 4, false, true, m).css({ left: ((o + q) * m) - k, top: -(p.dot_button_margin > -1 ? o - (p.dot_button_space / 2) + p.dot_button_margin + (l.dotButtonBlurBG ? p.dot_button_bg_padding : 0) : p.dot_button_margin + (p.dot_button_space / 2)) }) } return n }, navigation: function () { var z = this, A = z.sett, p = z.slides, u = z.buttonNext, l = z.buttonBack, t = z.buttonPause, x = z.buttonIE, B = A.button_size, k = A.button_space; nav = z.nav = z; z.currentDown = -1; var w = e('<div class="navHolder" style="z-index:' + (z.slide_tot + 50) + ';"></div>'); if (u || z.buttonNumber) { var v = e('<div style="z-index:4; position: absolute; left: ' + (-B) + "px; top: " + (-(B + k) * (z.slide_tot + (u ? 1 : 0)) + k) + "px; width: " + B + "px; height: " + ((B + k) * (z.slide_tot + 1) - k) + 'px;"></div>'); if (A.button_numbers_horizontal) { v.css({ "z-index": 4, position: "absolute", left: -(B + k) * (z.slide_tot + (u ? 1 : 0)) + k, top: -B, width: (B + k) * (z.slide_tot + (u ? 1 : 0)) - k, height: B }) } w.append(v) } if (u) { u = z.buttonNext = z.addButton(nav, v, 4, true, false, "next").css({ left: (A.button_numbers_horizontal ? ((B + k) * z.slide_tot) : 0) - x, top: (A.button_numbers_horizontal ? 0 : ((B + k) * z.slide_tot)) - x }); if (A.button_numbers_autohide && z.buttonNumber) { if (!z.touchDevice) { u.bind("mouseenter", { self: z, up: true }, z.checkDropDown); v.bind("mouseleave", { self: z, up: false }, z.checkDropDown).bind("mouseenter", function (s) { if (z.numShow) { clearTimeout(z.buttonLeaveTimer) } }) } } } if (z.clockTimer) { var q, o; if (z.canvasSupport) { z.clockTimer = e('<canvas id="clockTimer" width="' + B + '" height="' + B + '" style="position:absolute; z-index:2;"></canvas>'); var y = z.clockContext = z.clockTimer[0].getContext("2d"); y.shadowColor = "rgba(0, 0, 0, 0.5)"; y.shadowBlur = 3; y.shadowOffsetX = 0; y.shadowOffsetY = 0; y.lineWidth = B / 10; y.lineCap = "round" } else { z.clockTimer = e('<div style="position:absolute; z-index:2; width:' + B + "px; height:" + B + 'px; overflow:hidden">							<div style="position:absolute; left: -2px; top:-2px; width:' + (B !== 20 ? (960 * (B / 20 / 1)) : 960) + "px; height:" + (B + 2) + "px; filter : progid:DXImageTransform.Microsoft.AlphaImageLoader(src=" + z.timer_sprite + ", sizingMethod=" + (B !== 20 ? "scale" : "noscale") + ') alpha(opacity=100);">							</div>						</div>') } if (A.button_numbers_horizontal && u) { v.append(z.clockTimer) } else { w.append(z.clockTimer) } if (A.button_numbers_horizontal) { if (u) { if (z.buttonNumber && !A.button_numbers_autohide) { q = -(B + k); o = 0 } else { q = (B + k) * (z.slide_tot - 1); o = 0 } } else { if (z.buttonNumber && !A.button_numbers_autohide) { q = -((B + k) * (z.slide_tot + 1)) + k; o = -B } else { q = -B; o = -B - x } } } else { q = -((B * (u || z.buttonNumber ? 2 : 1)) + (u || z.buttonNumber ? k : 0)); o = -B } z.clockTimer.css({ left: q, top: o }); t = z.buttonPause = z.addButton(nav, A.button_numbers_horizontal && u ? v : w, 3, true, false, "pause").css({ left: q - x, top: o - x }); if (z.autoPlaying) { t.css("opacity", 0) } else { z.clockTimer.css("opacity", 0) } if (!z.touchDevice) { t.bind("mouseenter", function (s) { t.stop().animate({ opacity: 1 }, { duration: 400, easing: "easeOutQuad" }) }).bind("mouseleave", function (s) { if (z.autoPlaying) { t.stop().animate({ opacity: 0 }, { duration: 400, easing: "easeOutQuart" }) } }) } } if (l) { var n, m; l = z.buttonBack = z.addButton(nav, A.button_numbers_horizontal && u ? v : w, 1, true, false, "back"); if (A.button_numbers_horizontal) { if (u) { n = (B + k) * (z.slide_tot - (z.clockTimer ? 2 : 1)); m = 0 } else { if (z.clockTimer) { n = parseInt(z.clockTimer.css("left"), 10) - B - k; m = parseInt(z.clockTimer.css("top"), 10) } else { n = -B + x; m = -B } } } else { if (z.clockTimer) { n = (-(B + k) * (u ? 3 : 2)) + k } else { n = -((B * (u || z.buttonNumber ? 2 : 1)) + (u || z.buttonNumber ? k : 0)) } m = -B } l.css({ left: n - x, top: m - x }) } if (z.buttonNumber) { for (var r = 0; r < z.slide_tot; r++) { p[r].butt = z.addButton(nav, v, z.slide_tot - r + 5, false, false, r); if (A.button_numbers_horizontal) { p[r].butt.css({ top: -x, left: ((B + k) * r) - x }) } else { p[r].butt.css({ left: -x, top: ((B + k) * r) - x }) } if (r == z.slide_sel) { p[r].butt.bg.css("opacity", 1) } p[r].butt.hide() } } w.css({ right: A.button_margin - (A.caption_float_mode ? 0 : -A.caption_margin_x), bottom: A.button_margin - (A.caption_float_mode ? 0 : -A.caption_margin_y) }); return w }, swapNavigation: function (k) { e(h).unbind(".TransBannerButtonUp_" + this.instanceID); if (this.currentNav === 1) { if (this.navHolder) { this.navHolder.show() } if (this.navHolderD) { this.navHolderD.hide() } if (this.navHolderA) { this.navHolderA.hide() } } else { if (this.currentNav === 2) { if (this.navHolder) { this.navHolder.hide() } if (this.navHolderD) { this.navHolderD.show() } if (this.navHolderA) { this.navHolderA.hide() } } else { if (this.currentNav === 3) { if (this.navHolder) { this.navHolder.hide() } if (this.navHolderD) { this.navHolderD.hide() } if (this.navHolderA) { this.navHolderA.show() } } } } e(h).bind(this.upEvent + ".TransBannerButtonUp_" + this.instanceID, { self: this }, this.releaseButton); if (this.currentNav < 3) { this.toggleButton(true) } this.timerReset(true); if (this.autoPlaying && k) { this.startDelayTimer() } }, addButton: function (k, t, v, s, l, p) { var w = this, x = l ? w.sett.dot_button_size + w.sett.dot_button_space : w.sett.button_size, o, u, r, n = e('<div class="noSelect" style="z-index:' + v + "; position: absolute; width:" + (x + (w.buttonIE * 2)) + "px; height:" + (x + (w.buttonIE * 2)) + 'px; cursor: pointer;">						<div class="defaultButton rounded ' + (!w.IE8 && (s || l) ? "icon" : "") + '" style="position: absolute; overflow: hidden; z-index:2; left: ' + w.buttonIE + "px; top: " + w.buttonIE + "px; right:" + w.buttonIE + "px; bottom:" + w.buttonIE + "px; width:" + x + "px; height:" + x + "px; " + (w.IE8 || l ? "" : "background-color:" + w.sett.button_color) + '">' + (w.IE8 && !l ? '							<div class="buttonAlpha" style="background-color:' + w.sett.button_color + '"></div>							<div class="buttonTopBot" style="background-color:' + w.sett.button_color + '"></div>							<div class="buttonCent iconHolder ' + (s ? "icon" : "") + '" unselectable="on" style="height: ' + (x - 2) + "px; background-color:" + w.sett.button_color + '" align="center">' + (s ? "" : '								<span unselectable="on" class="buttonText ' + (w.icOff > 0 ? "buttonTextSizeTouch" : " buttonTextSizeNormal") + '" style="position:relative; text-align: center; line-height:' + (x - 1) + "px; left:" + (String(p + 1).length <= 1 ? 1 : 0) + 'px; top:-1px;"  align="center">' + (p + 1) + "</span>") + "							</div>" : "") + "						</div>						" + (l || !w.IE8 ? "" : '<div class="buttonShadow"></div>') + "					</div>"), m = n.find(".defaultButton"); if (w.IE8) { o = n.find(".buttonShadow"); u = m.find(".iconHolder"); if (s) { u.css("background-position", (l ? w.icDotOff : (p == "next" ? ((x - w.icSize) / 2) - w.icSize : p == "pause" ? ((x - w.icSize) / 2) - (w.autoPlaying ? w.icSize * 2 : w.icSize * 3) : (x - w.icSize) / 2) - w.icOff) + "px center") } else { if (l) { m.append(l = e('<div style="position: absolute; width:' + x + "px; height:" + x + "px; left:" + w.icDotOff + "px; top:" + (-(w.icSize / 2) + (x / 2)) + "px; filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=" + w.icons + ', sizingMethod=image) alpha(opacity=100);"></div>')) } else { var q = u.find(".buttonText") } } n.append(m, o) } else { if (s || l) { m.css("background-position", (l ? w.icDotOff : (p == "next" ? ((x - w.icSize) / 2) - w.icSize : p == "pause" ? ((x - w.icSize) / 2) - (w.autoPlaying ? w.icSize * 2 : w.icSize * 3) : (x - w.icSize) / 2) - w.icOff) + "px center") } else { r = e('<div align="center" class="buttonText ' + (w.icOff > 0 ? "buttonTextSizeTouch" : " buttonTextSizeNormal") + '" style="z-index:2; position: absolute; left: 0px; top: 0px; width: 100%; height:100%; line-height:' + x + 'px; text-align: center; cursor:hand;">' + (p + 1) + "</div>") } if (!l) { m.css(w.shProp, "0px 0px 2px " + (e.browser.webkit && parseInt(e.browser.version, 10) < 533 ? "" : "0px ") + "rgba(0, 0, 0, .7)") } n.append(m, r) } if (!l) { m.css("opacity", w.sett.button_opacity) } n.bg = m; n.sh = o; n.ih = u; n.bt = q; n.dot = l; t.append(n); n.bind("mouseenter mouseleave " + w.downEvent, { self: w, num: p, dot: l, btn: n }, w.hoverButton); return n }, hoverButton: function (p) { var l = p.data.self, m = p.data.num, k = p.data.dot, o = p.data.btn, n = k ? l.sett.dot_button_size + l.sett.dot_button_space : l.sett.button_size, q; if (p.type == "mouseenter") { if (k) { if (l.IE8) { o.dot.css("left", l.icDotOff - l.icSize) } else { o.bg.css("background-position", l.icDotOff - l.icSize + "px center") } } else { o.bg.css({ opacity: 1 }) } } else { if (p.type == "mouseleave") { if (m != l.slide_sel) { if (k) { if (l.IE8) { o.dot.css("left", l.icDotOff) } else { o.bg.css("background-position", l.icDotOff + "px center") } } else { o.bg.css("opacity", l.sett.button_opacity) } } } else { p.stopImmediatePropagation(); if (m !== l.slide_sel) { if (k) { if (l.IE8) { o.dot.css("left", l.icDotOff - (l.icSize * 2)) } else { o.bg.css("background-position", (l.icDotOff - (l.icSize * 2)) + "px center") } } else { q = ((n - l.icSize) / 2) - l.icOff - 1; if (m == "next") { q -= l.icSize } else { if (m == "pause" && l.autoPlaying) { q -= l.icSize * 2 } else { if (m == "pause" && !l.autoPlaying) { q -= l.icSize * 3 } } } l.resizeButton(o, l.buttonIE + (k ? 0 : 1), 1, n - 2, q, m == "next" && !l.numShow && l.touchDevice ? l.sett.button_opacity : 1); if (o.bt) { o.bt.css("top", -2) } } l.currentDown = m } if (l.touchDevice && l.currentNav < 3) { if (m == "next" && !l.numShow) { l.checkDropDown(false, true) } else { if (m == "back" || m == "pause" && l.numShow) { l.checkDropDown(false, false) } } } } } }, releaseButton: function (p) { var k = p.data.self, m = (k.currentNav == 2) ? k.sett.dot_button_size + k.sett.dot_button_space : k.sett.button_size, n = k.checkTransitionStatus(), o = (k.currentDown < 0 || k.slide_sel === k.currentDown) ? true : false; if (k.currentDown == "next") { if (n) { k.slide_dir = -1; k.changeSlide("next") } k.resizeButton(k.currentNav == 3 ? k.buttonNextA : k.buttonNext, k.buttonIE, 0, m, (((m - k.icSize) / 2) - k.icSize) - k.icOff, 1) } else { if (k.currentDown == "back") { if (n) { k.slide_dir = 1; k.changeSlide("back") } k.resizeButton(k.currentNav == 3 ? k.buttonBackA : k.buttonBack, k.buttonIE, 0, m, ((m - k.icSize) / 2) - k.icOff, k.touchDevice ? k.sett.button_opacity : 1) } else { if (k.currentDown == "pause") { if (k.autoPlaying) { k.autoPlaying = false; k.buttonPause.css("opacity", 1); k.clockTimer.css("opacity", 0); k.timerReset(true) } else { k.autoPlaying = true; k.buttonPause.stop().animate({ opacity: 0 }, { duration: 400, easing: "easeOutQuart" }); k.clockTimer.css("opacity", 1); k.timerReset(true); k.startDelayTimer() } k.resizeButton(k.buttonPause, k.buttonIE, 0, m, (((m - k.icSize) / 2) - (k.autoPlaying ? k.icSize * 2 : k.icSize * 3)) - k.icOff, k.touchDevice ? k.sett.button_opacity : 1) } else { if (k.currentDown > -1) { if (n && k.slide_sel !== k.currentDown) { if (k.currentDown > k.slide_sel) { k.slide_dir = -1 } else { if (k.currentDown < k.slide_sel) { k.slide_dir = 1 } } k.changeSlide(k.currentDown) } if (k.currentNav !== 2) { var l = k.currentNav === 1 ? k.slides[k.slide_sel].butt : k.slides[k.slide_sel].buttS; if (l.ih) { l.ih.height(m - 2) } if (l.bt) { l.bt.css("top", -1) } } } } } } if (k.currentDown !== "pause" && !o) { if (k.sett.button_show_numbers && k.currentNav < 3) { k.toggleButton(false) } else { k.timerReset(false) } } k.currentDown = -1 }, resizeButton: function (n, o, m, l, q, k, p) { n.bg.css({ opacity: k, left: o, top: o, width: l, height: l, "background-position": q + "px center" }); if (n.sh) { n.sh.css({ left: m, top: m, width: l + 2, height: l + 2 }) } if (n.ih) { n.ih.css({ height: l - 2, "background-position": q + "px center" }) } }, toggleButton: function (k) { var n = (this.currentNav == 2 ? this.sett.dot_button_size + this.sett.dot_button_space : this.sett.button_size); for (var m = 0, l; m < this.slide_tot; m++) { l = this.currentNav > 1 ? this.slides[m].buttS : this.slides[m].butt; if (l) { l.bg.css({ opacity: (m == this.slide_sel || this.currentNav == 2) ? 1 : this.sett.button_opacity, left: this.buttonIE, top: this.buttonIE, width: n, height: n }) } if (this.currentNav == 2) { if (this.IE8) { l.dot.css("left", this.icDotOff - (m == this.slide_sel ? this.icSize : 0)) } else { l.bg.css("background-position", (this.icDotOff - (m == this.slide_sel ? this.icSize : 0)) + "px center") } } } this.timerReset(k); l = this.currentNav > 1 ? this.slides[this.slide_sel].buttS : this.slides[this.slide_sel].butt; if (this.buttonIE > 0 && l.sh) { l.sh.css({ left: 0, top: 0, width: this.sett.button_size + 2, height: this.sett.button_size + 2 }) } }, checkDropDown: function (n, k) { var l = n ? n.data.self : this; var k = n ? n.data.up : k; if (k && !l.numShow) { for (var m = 0; m < l.slide_tot; m++) { clearTimeout(l.buttonLeaveTimer); clearTimeout(l.slides[m].timer); l.showHideButton(m, true) } } else { if (!k && l.numShow) { l.buttonLeaveTimer = setTimeout(function () { l.numShow = false; for (var o = 0; o < l.slide_tot; o++) { l.showHideButton(o, false) } }, n ? 300 : 0) } } }, showHideButton: function (o, k) { var m = this; var n, p, r, q, l; l = m.slides[o].butt; clearTimeout(m.buttonLeaveTimer); clearTimeout(m.slides[o].timer); l.stop(); if (k) { m.numShow = true; m.slides[o].butt.show(); if (l.css("opacity") == 1) { l.css("opacity", 0) } n = (m.slide_tot - o) * (100 / m.slide_tot); p = 20 + ((m.slide_tot - o) * (300 / m.slide_tot)); r = 1; q = 3 } else { m.numShow = false; n = o * (150 / m.slide_tot); p = 20 + (o * (150 / m.slide_tot)); r = 0; q = 8 } m.slides[o].timer = setTimeout(function () { l.animate({ opacity: r }, { duration: p, step: function (s) { m.showHideStep(s, q, l, k, o) }, complete: function () { if (!k) { m.slides[o].butt.hide() } } }) }, n) }, showHideStep: function (m, r, n, q, o) { var t = this, v = t.currentNav == 2 ? t.sett.dot_button_size : t.sett.button_size, k = t.currentNav == 2 ? t.sett.dot_button_space : t.sett.button_space, l = parseInt((v / r) - (v / r * m), 10), u = v - (l * 2); n.bg.css({ left: l + t.buttonIE, top: l + t.buttonIE, width: u, height: u }); if (t.buttonIE > 0) { n.sh.css({ left: l, top: l, width: u + 2, height: u + 2 }) } if (n.ih) { n.bt.css("top", -l - 1); n.ih.height(u - 2) } if (t.sett.button_numbers_horizontal && o == t.slide_tot - 1) { if (t.clockTimer && t.navHolder) { if (t.buttonNext) { t.clockTimer.css("left", q ? -(v + k) * m : ((v + k) * (t.slide_tot - 1) * (1 - m)) + (v + k) * m) } if (t.buttonBack) { t.buttonBack.css("left", parseInt(t.clockTimer.css("left")) - v - k - t.buttonIE) } t.buttonPause.css({ left: parseInt(t.clockTimer.css("left"), 10) - t.buttonIE, top: parseInt(t.clockTimer.css("top"), 10) - t.buttonIE }) } else { if (t.buttonBack && t.buttonNext) { t.buttonBack.css("left", (q ? -m * (v + k) : ((v + k) * (t.slide_tot - 1) * (1 - m)) + (v + k) * m) - t.buttonIE) } } } }, checkTransitionStatus: function () { if (this.sett.slide_transition == "fade") { if (this.slide_fin) { return true } else { return false } } else { if (this.slide_dir < 0 && this.slides[this.slide_sel].con.position().left < this.bW / 2) { return true } else { if (this.slide_dir > 0 && this.slides[this.slide_sel].con.position().left > -this.bW / 2) { return true } else { return false } } } }, startDelayTimer: function () { var k = this; if (k.clockTimer && k.currentNav == 1) { k.clockTimer.stop() } k.clockPlaying = true; k.timerob.stop().css("left", 0).animate({ left: 720 }, { easing: "linear", duration: k.slides[k.slide_sel].delay, queue: false, step: function (m) { if (k.sett.button_show_timer && k.currentNav == 1) { if (k.canvasSupport) { var l = k.drawTimer(k); l.strokeStyle = k.sett.button_color; l.beginPath(); l.arc(k.sett.button_size / 2, k.sett.button_size / 2, (k.sett.button_size / 2) - (k.sett.button_size / 10), (Math.PI * 2 * (m / 720)) - (Math.PI / 2), -Math.PI / 2, true); l.stroke(); l.closePath() } else { var n = (parseInt(m / 720 * 39, 10) * -(24 * k.sett.button_size / 20)) - 2; n < -(39 * (24 * k.sett.button_size / 20)) - 2 ? n = -2 : ""; k.clockTimer.children().eq(0).css("left", n) } } }, complete: function () { k.clockPlaying = false; if (!k.slide_drg) { k.slide_dir = -1; k.changeSlide("next"); if (k.sett.button_show_numbers && k.currentNav < 3) { k.toggleButton(false) } else { k.timerReset(false) } } } }) }, timerReset: function (l) { var k = this; if (k.clockPlaying) { k.timerob.stop() } if (k.autoPlaying) { if (k.clockTimer && k.currentNav == 1) { if (l) { k.timerHalt() } else { k.clockTimer.stop().fadeTo(300, 0.4, function (m) { k.timerHalt() }) } } } }, timerHalt: function () { var k = this; if (k.canvasSupport) { k.drawTimer(k) } else { k.clockTimer.css("filter", "none").children().eq(0).css("left", -2) } }, drawTimer: function (l) { var k = l.clockContext; k.clearRect(0, 0, l.sett.button_size, l.sett.button_size); k.strokeStyle = "rgba(255, 255, 255, .4)"; k.beginPath(); k.arc(l.sett.button_size / 2, l.sett.button_size / 2, (l.sett.button_size / 2) - (l.sett.button_size / 10), 0, Math.PI * 2, true); k.stroke(); k.closePath(); l.clockTimer.css("opacity", 1); return k }, transPrepare: function (n, m, o, l) { var k = this; k.zSort(n, m); if (k.slides[o].txt) { if (!k.dotButtonBlurBG) { k.slides[o].cap.hide() } if (k.sett.caption_float_mode) { k.slides[o].cap.css("left", k.slides[o].cx + (k.IE8 || k.dotButtonBlurBG ? 0 : (100 * -k.slide_dir))) } if (l && k.IE8) { k.slides[o].txt.stop(true); k.slides[o].cap.stop(true) } } if (k.slide_pr1 !== "") { if (k.slides[k.slide_pr1].txt) { k.textOut() } } k.slide_drg = false; k.slide_fin = false; k.slide_playing = true }, transComplete: function (k, l) { k.slide_fin = true; if (k.slide_sta) { k.slide_sta = false; k.$cont.css("background-image", "none") } if (k.slide_sel == k.slide_sel && k.slides[l].txt && k.enableCaption && k.slide_sel == l) { k.animateCaption() } if (k.autoPlaying) { if (k.currentNav == 3) { k.toggleButton(true) } k.startDelayTimer() } }, move: function () { var k = this, l = k.slide_sel; k.transPrepare(2, 1, l, false); k.slides[l].con.stop().css({ left: (k.slide_pr1 !== "" ? k.slides[k.slide_pr1].con.position().left + (-k.bW * k.slide_dir) : -k.bW * k.slide_dir), display: "block" }).animate({ left: 0 }, { duration: k.sett.slide_transition_period + 100, easing: "easeInOutQuart", step: function (m) { if (k.slide_pr1 !== "" && k.slide_pr1 !== l) { k.slides[k.slide_pr1].con.stop().css("left", m + (k.bW * k.slide_dir)) } if (k.slide_pr2 !== "" && k.slide_pr2 !== l && k.slide_pr2 !== k.slide_pr1) { k.slides[k.slide_pr2].con.stop().css("left", m + (k.bW * 2 * k.slide_dir)) } }, complete: function () { k.transComplete(k, l) } }) }, fade: function () { var k = this, l = k.slide_sel; k.transPrepare(2, 1, l, false); k.slides[l].con.stop().css({ left: 0, display: "none" }).fadeIn({ duration: k.sett.slide_transition_period + 100, easing: "easeInOutQuart", complete: function () { k.transComplete(k, l) } }) }, slideIn: function () { var k = this, m = this.slide_sel, l = k.shProp; k.transPrepare(2, 1, m, true); k.slides[m].con.stop(true).css({ left: (k.bW + 30) * -k.slide_dir, sh: "0px 0px 45px 0px #000000", display: "block" }).animate({ left: 0 }, { duration: k.sett.slide_transition_period + 100, easing: "easeInOutQuart", complete: function () { k.transComplete(k, m); k.slides[m].con.css(k.shProp, "none") } }) }, slideOut: function () { var k = this, m = this.slide_sel, l = k.shProp; k.transPrepare(1, 2, m, false); if (k.slide_pr1 !== "") { k.slides[m].con.stop(true).css({ left: 0, sh: "0px 0px 45px 0px #000000", display: "block" }); if (k.IE8 && k.slides[m].txt) { k.slides[k.slide_pr1].txt.stop(true); k.slides[k.slide_pr1].cap.stop(true) } k.slides[k.slide_pr1].con.stop(true).animate({ left: k.slide_dir * (k.bW + 30) }, { duration: k.sett.slide_transition_period, easing: "easeInOutQuart", complete: function () { k.transComplete(k, m); k.slides[m].con.css(k.shProp, "none") } }) } else { k.slides[m].con.stop(true).css({ left: k.bW, display: "block" }).animate({ left: 0 }, { duration: k.sett.slide_transition_period, easing: "easeInOutQuart", complete: function () { k.slide_fin = true; if (m == k.slide_sel && k.slides[m].txt && k.enableCaption) { k.animateCaption() } if (k.autoPlaying) { k.startDelayTimer() } } }) } }, resizeBanner: function (o) { var l = this, k = l.bW; if (o.internal) { l.bW = l.$cont.width(); l.bH = l.getHeight() } else { if (o.width) { l.bW = k = o.width; l.$cont.width(l.bW) } else { if (o.maxWidth) { l.bW = k = l.maxW = o.maxWidth; l.$cont.css("max-width", l.maxW + "px"); l.bW = l.$cont.width() } } if (o.height) { l.bH = l.oH = o.height; l.ratio = k / l.oH } else { l.oH = k / l.ratio } l.bH = l.getHeight() } if (l.sett.responsive) { l.enableCaption = !l.checkLimit(l.sett.responsive_limit_caption, false); if (l.sett.responsive_limit_navigation !== "") { if (l.checkLimit(l.sett.responsive_limit_navigation, false)) { if (l.currentNav !== l.sett.responsive_limit_navigation_type) { l.currentNav = l.sett.responsive_limit_navigation_type; l.swapNavigation(true) } } else { if (l.currentNav !== l.sett.navigation_type) { l.currentNav = l.sett.navigation_type; l.swapNavigation(true) } } } } if (l.currentNav == 2) { l.navHolderD.css("left", l.bW / 2) } else { if (l.currentNav == 3) { l.buttonNextA.css({ left: l.bW - l.sett.button_size - l.sett.button_margin, top: (l.bH - l.sett.button_size) / 2 }); l.buttonBackA.css({ left: l.sett.button_margin, top: (l.bH - l.sett.button_size) / 2 }) } } for (var m = l.slide_sel, n = true; m < l.slide_tot; m++) { if (n || m !== l.slide_sel) { l.resizeImage(m); if (l.slides[m].txt) { l.updateText(m); if (!l.enableCaption && !l.dotButtonBlurBG) { l.slides[m].cap.hide() } else { l.slides[m].cap.show(); l.slides[m].txt.show() } } if (n) { m = (l.slide_sel == 0) ? 0 : -1; n = false } else { l.slides[m].con.stop().css("left", l.bW * l.slide_dir) } } } } }; e.fn.TransBanner = function (l) { var k = arguments; return this.each(function (o) { var n = e(this); var m = n.data("TransBanner"); if (!m) { var p = new Date(); n.data("TransBanner", new i(n, l, p.getTime())) } else { if (m[k[0]]) { m[l].apply(m, Array.prototype.slice.call(k, 1)) } } }) };


    //Below is slightly customized version of StackBoxBlur to fit TransBanner

    /*

    StackBoxBlur - a fast almost Box Blur For Canvas
	
    Version: 	0.3
    Author:		Mario Klingemann
    Contact: 	mario@quasimondo.com
    Website:	http://www.quasimondo.com/
    Twitter:	@quasimondo
	
    In case you find this class useful - especially in commercial projects -
    I am not totally unhappy for a small donation to my PayPal account
    mario@quasimondo.de
	
    Copyright (c) 2010 Mario Klingemann
	
    Permission is hereby granted, free of charge, to any person
    obtaining a copy of this software and associated documentation
    files (the "Software"), to deal in the Software without
    restriction, including without limitation the rights to use,
    copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following
    conditions:
	
    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
	
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.
    */

    var j = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1]; var a = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9]; function g(v, y, r, s, w, x, A, C, B, t, E, z) { var q = s; var u = w; B.style.width = q + "px"; B.style.height = u + "px"; B.width = q; B.height = u; var D = B.getContext("2d"); D.clearRect(0, 0, q, u); D.scale(x, x); D.drawImage(v, (-y + (A !== "" ? A : 0)) / x, (-r + (C !== "" ? C : 0)) / x); if (isNaN(t) || t < 1) { return } b(B, 0, 0, q, u, t, z); D.restore() } function b(aC, aj, al, aI, aH, ab, X) { if (isNaN(ab) || ab < 1) { return } ab |= 0; if (isNaN(X)) { X = 1 } X |= 0; if (X > 3) { X = 3 } if (X < 1) { X = 1 } var p = aC.getContext("2d"); var Y; try { try { Y = p.getImageData(aj, al, aI, aH) } catch (x) { try { netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead"); Y = p.getImageData(aj, al, aI, aH) } catch (x) { return } } } catch (x) { } var aD = Y.data; var ad, ae, V, Z, av, ar, ay, aF, aE, am, ax, ak, ao, ag, ac, au, az, at, aq, ah; var y = ab + ab + 1; var af = aI << 2; var aw = aI - 1; var aa = aH - 1; var aA = ab + 1; var ai = new c(); var an = ai; for (V = 1; V < y; V++) { an = an.next = new c(); if (V == aA) { var aB = an } } an.next = ai; var W = null; var ap = j[ab]; var aG = a[ab]; while (X-- > 0) { ay = ar = 0; for (ae = aH; --ae > -1; ) { aF = aA * (az = aD[ar]); aE = aA * (at = aD[ar + 1]); am = aA * (aq = aD[ar + 2]); an = ai; for (V = aA; --V > -1; ) { an.r = az; an.g = at; an.b = aq; an = an.next } for (V = 1; V < aA; V++) { Z = ar + ((aw < V ? aw : V) << 2); aF += (an.r = aD[Z++]); aE += (an.g = aD[Z++]); am += (an.b = aD[Z]); an = an.next } W = ai; for (ad = 0; ad < aI; ad++) { aD[ar++] = (aF * ap) >>> aG; aD[ar++] = (aE * ap) >>> aG; aD[ar++] = (am * ap) >>> aG; ar++; Z = (ay + ((Z = ad + ab + 1) < aw ? Z : aw)) << 2; aF -= W.r - (W.r = aD[Z++]); aE -= W.g - (W.g = aD[Z++]); am -= W.b - (W.b = aD[Z]); W = W.next } ay += aI } for (ad = 0; ad < aI; ad++) { ar = ad << 2; aF = aA * (az = aD[ar++]); aE = aA * (at = aD[ar++]); am = aA * (aq = aD[ar]); an = ai; for (V = 0; V < aA; V++) { an.r = az; an.g = at; an.b = aq; an = an.next } av = aI; for (V = 1; V <= ab; V++) { ar = (av + ad) << 2; aF += (an.r = aD[ar++]); aE += (an.g = aD[ar++]); am += (an.b = aD[ar]); an = an.next; if (V < aa) { av += aI } } ar = ad; W = ai; for (ae = 0; ae < aH; ae++) { Z = ar << 2; aD[Z] = (aF * ap) >>> aG; aD[Z + 1] = (aE * ap) >>> aG; aD[Z + 2] = (am * ap) >>> aG; Z = (ad + (((Z = ae + aA) < aa ? Z : aa) * aI)) << 2; aF -= W.r - (W.r = aD[Z]); aE -= W.g - (W.g = aD[Z + 1]); am -= W.b - (W.b = aD[Z + 2]); W = W.next; ar += aI } } } p.putImageData(Y, aj, al) } function c() { this.r = 0; this.g = 0; this.b = 0; this.a = 0; this.next = null } 
})(jQuery, window, document);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
*
*  jQuery $.getImageData Plugin 0.3
*  http://www.maxnov.com/getimagedata
*  
*  Written by Max Novakovic (http://www.maxnov.com/)
*  Date: Thu Jan 13 2011
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  
*  Includes jQuery JSONP Core Plugin 2.1.4
*  http://code.google.com/p/jquery-jsonp/
*  Copyright 2010, Julian Aubourg
*  Released under the MIT License.
* 
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  
*  Copyright 2011, Max Novakovic
*  Dual licensed under the MIT or GPL Version 2 licenses.
*  http://www.maxnov.com/getimagedata/#license
* 
*/
(function (c, g) {
    function n() { } function o(a) { s = [a] } function e(a, j, k) { return a && a.apply(j.context || j, k) } function h(a) {
        function j(b) { !l++ && g(function () { p(); q && (t[d] = { s: [b] }); z && (b = z.apply(a, [b])); e(a.success, a, [b, A]); e(B, a, [a, A]) }, 0) } function k(b) { !l++ && g(function () { p(); q && b != C && (t[d] = b); e(a.error, a, [a, b]); e(B, a, [a, b]) }, 0) } a = c.extend({}, D, a); var B = a.complete, z = a.dataFilter, E = a.callbackParameter, F = a.callback, R = a.cache, q = a.pageCache, G = a.charset, d = a.url, f = a.data, H = a.timeout, r, l = 0, p = n; a.abort = function () {
            !l++ &&
p()
        }; if (e(a.beforeSend, a, [a]) === false || l) return a; d = d || u; f = f ? typeof f == "string" ? f : c.param(f, a.traditional) : u; d += f ? (/\?/.test(d) ? "&" : "?") + f : u; E && (d += (/\?/.test(d) ? "&" : "?") + encodeURIComponent(E) + "=?"); !R && !q && (d += (/\?/.test(d) ? "&" : "?") + "_" + (new Date).getTime() + "="); d = d.replace(/=\?(&|$)/, "=" + F + "$1"); q && (r = t[d]) ? r.s ? j(r.s[0]) : k(r) : g(function (b, m, v) {
            if (!l) {
                v = H > 0 && g(function () { k(C) }, H); p = function () { v && clearTimeout(v); b[I] = b[w] = b[J] = b[x] = null; i[K](b); m && i[K](m) }; window[F] = o; b = c(L)[0]; b.id = M + S++; if (G) b[T] =
G; var O = function (y) { (b[w] || n)(); y = s; s = undefined; y ? j(y[0]) : k(N) }; if (P.msie) { b.event = w; b.htmlFor = b.id; b[I] = function () { /loaded|complete/.test(b.readyState) && O() } } else { b[x] = b[J] = O; P.opera ? (m = c(L)[0]).text = "jQuery('#" + b.id + "')[0]." + x + "()" : b[Q] = Q } b.src = d; i.insertBefore(b, i.firstChild); m && i.insertBefore(m, i.firstChild)
            } 
        }, 0); return a
    } var Q = "async", T = "charset", u = "", N = "error", M = "_jqjsp", w = "onclick", x = "on" + N, J = "onload", I = "onreadystatechange", K = "removeChild", L = "<script/>", A = "success", C = "timeout", P = c.browser,
i = c("head")[0] || document.documentElement, t = {}, S = 0, s, D = { callback: M, url: location.href }; h.setup = function (a) { c.extend(D, a) }; c.jsonp = h
})(jQuery, setTimeout);
(function (c) { c.getImageData = function (a) { var f = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/; if (a.url) { var g = location.protocol === "https:", e = ""; e = a.server && f.test(a.server) && a.server.indexOf("https:") && (g || a.url.indexOf("https:")) ? a.server : "//img-to-json.appspot.com/?callback=?"; c.jsonp({ url: e, data: { url: escape(a.url) }, dataType: "jsonp", timeout: 1E4, success: function (b) { var d = new Image; c(d).load(function () { this.width = b.width; this.height = b.height; typeof a.success == typeof Function && a.success(this) }).attr("src", b.data) }, error: function (b, d) { typeof a.error == typeof Function && a.error(b, d) } }) } else typeof a.error == typeof Function && a.error(null, "no_url") } })(jQuery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////